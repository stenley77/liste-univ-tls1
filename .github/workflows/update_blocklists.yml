name: Update Multiple Blocklists

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 6'  # Every Saturday at 12:00 UTC

jobs:
  update-blocklists:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y curl tar

    - name: Download, extract, list and process blocklists
      run: |
        ARCHIVES=("ddos" "adult" "malware" "phishing")
        
        for NAME in "${ARCHIVES[@]}"; do
          ARCHIVE_FILE="${NAME}.tar.gz"
          OUTPUT_DIR="${NAME}"
          OUTPUT_FILE="${OUTPUT_DIR}/adguardhome_${NAME}"

          echo "Downloading $ARCHIVE_FILE..."
          curl -o "$ARCHIVE_FILE" "ftp://ftp.ut-capitole.fr/pub/reseau/cache/squidguard_contrib/${ARCHIVE_FILE}"

          echo "Extracting $ARCHIVE_FILE..."
          tar -xzf "$ARCHIVE_FILE"

          echo "Files extracted from $ARCHIVE_FILE:"
          tar -tzf "$ARCHIVE_FILE"
          echo "-----------------------------------"

          mkdir -p "$OUTPUT_DIR"

          # Correctly locate the domains file
          if [[ "$NAME" == "malware" ]]; then
            # Temporary workaround for incorrect archive
            DOMAINS_FILE="phishing/domains"
          else
            DOMAINS_FILE="${NAME}/domains"
          fi

          if [[ -f "$DOMAINS_FILE" ]]; then
            echo "Converting $DOMAINS_FILE to $OUTPUT_FILE..."
            > "$OUTPUT_FILE"
            while IFS= read -r domain || [[ -n "$domain" ]]; do
              if [[ -n "$domain" ]]; then
                echo "||$domain^" >> "$OUTPUT_FILE"
              fi
            done < "$DOMAINS_FILE"
          else
            echo "Domains file not found for $NAME, skipping."
          fi
        done

    - name: Cleanup extracted large files
      run: |
        echo "Cleaning up large extracted files..."
        rm -rf ddos/domains adult/domains malware/domains phishing/domains
        rm -rf ddos/usage adult/usage malware/usage phishing/usage
        rm -rf ddos/urls adult/urls malware/urls phishing/urls
        rm -rf ddos/expressions adult/expressions malware/expressions phishing/expressions
        rm -f ddos.tar.gz adult.tar.gz malware.tar.gz phishing.tar.gz

    - name: Commit and push changes with splitting large files
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

        MAX_SIZE=104857600      # 100 MB
        SPLIT_SIZE=52428800     # 50 MB

        ARCHIVES=("ddos" "adult" "malware" "phishing")

        for NAME in "${ARCHIVES[@]}"; do
          OUTPUT_FILE="${NAME}/adguardhome_${NAME}"

          if [[ -f "$OUTPUT_FILE" ]]; then
            FILE_SIZE=$(stat -c%s "$OUTPUT_FILE")

            if (( FILE_SIZE > MAX_SIZE )); then
              echo "$OUTPUT_FILE dépasse 100 Mo, découpage en fichiers plus petits..."
              rm -f ${OUTPUT_FILE}_part*
              split -b $SPLIT_SIZE -d -a 2 --additional-suffix="" "$OUTPUT_FILE" "${OUTPUT_FILE}_part"
              rm "$OUTPUT_FILE"
              git add "${OUTPUT_FILE}_part"*
            else
              git add "$OUTPUT_FILE"
            fi
          fi
        done

        git commit -m "Update AdGuard Home blocklists" || echo "No changes to commit"
        git push
